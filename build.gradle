buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE")
		classpath("org.ajoberstar:gradle-git:1.6.0")
		classpath("commons-io:commons-io:2.4")
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

import org.ajoberstar.grgit.Grgit
import org.apache.commons.io.FileUtils

jar {
	baseName = 'smtp-mailer'
	version = project.version.toString()
}

repositories {
	jcenter()
	mavenCentral()
}

ext {
	gebVersion = '0.12.2'
	seleniumVersion = '2.53.0'
	chromeDriverVersion = '2.19'
	
	applicationRepositoryName = 'smtp-mailer'
	applicationRepositoryUrl = 'git@github.com:rcgeorge23/smtp-mailer.git'
	releaseRepositoryName = 'smtp-mailer-releases'
	releaseRepositoryUrl = 'git@github.com:rcgeorge23/smtp-mailer-releases.git'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext.junit4Version        = '4.12'
ext.junitVintageVersion  = '4.12.1'
ext.junitPlatformVersion = '1.0.1'
ext.junitJupiterVersion  = '5.0.1'
ext.log4jVersion         = '2.9.0'

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-jetty'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile group: 'org.subethamail', name: 'subethasmtp-wiser', version: '1.2'
	compile group: 'org.apache.commons', name: 'commons-email', version: '1.3.1'
	compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.4'
	compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
	compile group: 'commons-io', name: 'commons-io', version: '2.5'
	compile group: 'com.google.guava', name: 'guava', version: '22.0'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
	compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'
	
	runtime group: 'mysql', name: 'mysql-connector-java', version: '8.0.8-dmr'
	
    compile 'org.slf4j:slf4j-api:1.7.14'
    compile 'org.codehaus.groovy:groovy-all:2.4.5'
	
	testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
		exclude(module: 'commons-logging')
	}
	
    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4-rc-2'
	testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4-rc-3'
	testCompile 'com.nagternal:spock-genesis:0.5.0'
	testCompile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    testCompile 'junit:junit:4.12'
	testCompile "org.gebish:geb-spock:$gebVersion"
	testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"  
	testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
	testRuntime "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
	
	// JUnit Jupiter API and TestEngine implementation
	testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
	testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

	// If you also want to support JUnit 3 and JUnit 4 tests
	testCompile("junit:junit:${junit4Version}")
	testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")

	// To avoid compiler warnings about @API annotations in JUnit code
	testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')

	// To use Log4J's LogManager
	testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
	testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")

	// Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
	testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
}

bootRun {
	addResources = true
}
